{"ast":null,"code":"var _jsxFileName = \"E:\\\\coding\\\\projects\\\\hackCSB\\\\weather-app-chart\\\\src\\\\components\\\\WeatherChart.js\",\n  _s = $RefreshSig$();\n// src/components/WeatherChart.js\n\nimport React, { useState, useEffect } from 'react';\nimport axios from 'axios';\nimport { Line } from 'react-chartjs-2';\nimport { Chart as ChartJS, LineElement, CategoryScale, LinearScale, PointElement, Tooltip, Legend, TimeScale } from 'chart.js';\nimport 'chartjs-adapter-date-fns';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nChartJS.register(LineElement, CategoryScale, LinearScale, PointElement, Tooltip, Legend, TimeScale);\nconst WeatherChart = ({\n  placeId\n}) => {\n  _s();\n  const [weatherData, setWeatherData] = useState(null);\n  useEffect(() => {\n    const fetchWeatherData = async () => {\n      try {\n        const response = await axios.get('http://localhost:5000/api/point', {\n          params: {\n            place_id: placeId,\n            sections: 'all',\n            timezone: 'auto',\n            language: 'en',\n            units: 'metric'\n          }\n        });\n        setWeatherData(response.data);\n        console.log(\"weather data in chart\");\n        console.log(response.data);\n      } catch (error) {\n        console.error('Error fetching weather data', error);\n      }\n    };\n    if (placeId) {\n      fetchWeatherData();\n    }\n  }, [placeId]);\n  if (!weatherData) return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: \"Loading...\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 57,\n    columnNumber: 30\n  }, this);\n  const chartData = {\n    labels: weatherData.hourly.data.map(hour => new Date(hour.date)),\n    datasets: [{\n      label: 'Temperature (째C)',\n      data: weatherData.hourly.data.map(hour => hour.temperature),\n      borderColor: 'rgba(75, 192, 192, 1)',\n      fill: false,\n      yAxisID: 'y-temperature'\n    }, {\n      label: 'Wind Speed (m/s)',\n      data: weatherData.hourly.data.map(hour => hour.wind.speed),\n      borderColor: 'rgba(192, 75, 75, 1)',\n      fill: false,\n      yAxisID: 'y-wind'\n    }, {\n      label: 'Cloud Cover (%)',\n      data: weatherData.hourly.data.map(hour => hour.cloud_cover.total),\n      borderColor: 'rgba(75, 75, 192, 1)',\n      fill: false,\n      yAxisID: 'y-cloud'\n    }]\n  };\n  const options = {\n    scales: {\n      x: {\n        type: 'time',\n        time: {\n          unit: 'hour'\n        },\n        title: {\n          display: true,\n          text: 'Time'\n        }\n      },\n      'y-temperature': {\n        type: 'linear',\n        position: 'left',\n        title: {\n          display: true,\n          text: 'Temperature (째C)'\n        }\n      },\n      'y-wind': {\n        type: 'linear',\n        position: 'right',\n        title: {\n          display: true,\n          text: 'Wind Speed (m/s)'\n        },\n        grid: {\n          drawOnChartArea: false\n        }\n      },\n      'y-cloud': {\n        type: 'linear',\n        position: 'right',\n        title: {\n          display: true,\n          text: 'Cloud Cover (%)'\n        },\n        grid: {\n          drawOnChartArea: false\n        }\n      }\n    },\n    plugins: {\n      legend: {\n        display: true,\n        position: 'top'\n      },\n      tooltip: {\n        mode: 'index',\n        intersect: false\n      }\n    },\n    interaction: {\n      mode: 'nearest',\n      axis: 'x',\n      intersect: false\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"Weather Data\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 148,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(Line, {\n      data: chartData,\n      options: options\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 149,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 147,\n    columnNumber: 9\n  }, this);\n};\n_s(WeatherChart, \"BCUo9muHyxrqajg6diFxqqqjG/A=\");\n_c = WeatherChart;\nexport default WeatherChart;\nvar _c;\n$RefreshReg$(_c, \"WeatherChart\");","map":{"version":3,"names":["React","useState","useEffect","axios","Line","Chart","ChartJS","LineElement","CategoryScale","LinearScale","PointElement","Tooltip","Legend","TimeScale","jsxDEV","_jsxDEV","register","WeatherChart","placeId","_s","weatherData","setWeatherData","fetchWeatherData","response","get","params","place_id","sections","timezone","language","units","data","console","log","error","children","fileName","_jsxFileName","lineNumber","columnNumber","chartData","labels","hourly","map","hour","Date","date","datasets","label","temperature","borderColor","fill","yAxisID","wind","speed","cloud_cover","total","options","scales","x","type","time","unit","title","display","text","position","grid","drawOnChartArea","plugins","legend","tooltip","mode","intersect","interaction","axis","_c","$RefreshReg$"],"sources":["E:/coding/projects/hackCSB/weather-app-chart/src/components/WeatherChart.js"],"sourcesContent":["// src/components/WeatherChart.js\r\n\r\nimport React, { useState, useEffect } from 'react';\r\nimport axios from 'axios';\r\nimport { Line } from 'react-chartjs-2';\r\nimport {\r\n    Chart as ChartJS,\r\n    LineElement,\r\n    CategoryScale,\r\n    LinearScale,\r\n    PointElement,\r\n    Tooltip,\r\n    Legend,\r\n    TimeScale\r\n} from 'chart.js';\r\nimport 'chartjs-adapter-date-fns';\r\n\r\nChartJS.register(\r\n    LineElement,\r\n    CategoryScale,\r\n    LinearScale,\r\n    PointElement,\r\n    Tooltip,\r\n    Legend,\r\n    TimeScale\r\n);\r\n\r\nconst WeatherChart = ({ placeId }) => {\r\n    const [weatherData, setWeatherData] = useState(null);\r\n\r\n    useEffect(() => {\r\n        const fetchWeatherData = async () => {\r\n            try {\r\n                const response = await axios.get('http://localhost:5000/api/point', {\r\n                    params: {\r\n                        place_id: placeId,\r\n                        sections: 'all',\r\n                        timezone: 'auto',\r\n                        language: 'en',\r\n                        units: 'metric',\r\n                    },\r\n                });\r\n\r\n                setWeatherData(response.data);\r\n                console.log(\"weather data in chart\");\r\n                console.log(response.data);\r\n            } catch (error) {\r\n                console.error('Error fetching weather data', error);\r\n            }\r\n        };\r\n\r\n        if (placeId) {\r\n            fetchWeatherData();\r\n        }\r\n    }, [placeId]);\r\n\r\n    if (!weatherData) return <div>Loading...</div>;\r\n\r\n    const chartData = {\r\n        labels: weatherData.hourly.data.map(hour => new Date(hour.date)),\r\n        datasets: [\r\n            {\r\n                label: 'Temperature (째C)',\r\n                data: weatherData.hourly.data.map(hour => hour.temperature),\r\n                borderColor: 'rgba(75, 192, 192, 1)',\r\n                fill: false,\r\n                yAxisID: 'y-temperature',\r\n            },\r\n            {\r\n                label: 'Wind Speed (m/s)',\r\n                data: weatherData.hourly.data.map(hour => hour.wind.speed),\r\n                borderColor: 'rgba(192, 75, 75, 1)',\r\n                fill: false,\r\n                yAxisID: 'y-wind',\r\n            },\r\n            {\r\n                label: 'Cloud Cover (%)',\r\n                data: weatherData.hourly.data.map(hour => hour.cloud_cover.total),\r\n                borderColor: 'rgba(75, 75, 192, 1)',\r\n                fill: false,\r\n                yAxisID: 'y-cloud',\r\n            }\r\n        ],\r\n    };\r\n\r\n    const options = {\r\n        scales: {\r\n            x: {\r\n                type: 'time',\r\n                time: {\r\n                    unit: 'hour',\r\n                },\r\n                title: {\r\n                    display: true,\r\n                    text: 'Time',\r\n                },\r\n            },\r\n            'y-temperature': {\r\n                type: 'linear',\r\n                position: 'left',\r\n                title: {\r\n                    display: true,\r\n                    text: 'Temperature (째C)',\r\n                },\r\n            },\r\n            'y-wind': {\r\n                type: 'linear',\r\n                position: 'right',\r\n                title: {\r\n                    display: true,\r\n                    text: 'Wind Speed (m/s)',\r\n                },\r\n                grid: {\r\n                    drawOnChartArea: false,\r\n                },\r\n            },\r\n            'y-cloud': {\r\n                type: 'linear',\r\n                position: 'right',\r\n                title: {\r\n                    display: true,\r\n                    text: 'Cloud Cover (%)',\r\n                },\r\n                grid: {\r\n                    drawOnChartArea: false,\r\n                },\r\n            }\r\n        },\r\n        plugins: {\r\n            legend: {\r\n                display: true,\r\n                position: 'top',\r\n            },\r\n            tooltip: {\r\n                mode: 'index',\r\n                intersect: false,\r\n            },\r\n        },\r\n        interaction: {\r\n            mode: 'nearest',\r\n            axis: 'x',\r\n            intersect: false,\r\n        }\r\n    };\r\n\r\n    return (\r\n        <div>\r\n            <h2>Weather Data</h2>\r\n            <Line data={chartData} options={options} />\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default WeatherChart;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}