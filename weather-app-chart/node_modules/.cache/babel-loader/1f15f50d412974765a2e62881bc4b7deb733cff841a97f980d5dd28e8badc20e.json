{"ast":null,"code":"var _jsxFileName = \"D:\\\\0. Acadmic stuff\\\\CSE '21\\\\PERSONAL\\\\CSB_Hackathon\\\\weather-app-chart\\\\src\\\\components\\\\WeatherChart.js\",\n  _s = $RefreshSig$();\n// src/components/WeatherChart.js\n\nimport React, { useState, useEffect } from 'react';\nimport axios from 'axios';\nimport { Line } from 'react-chartjs-2';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst WeatherChart = () => {\n  _s();\n  const [weatherData, setWeatherData] = useState(null);\n  useEffect(() => {\n    const fetchWeatherData = async () => {\n      try {\n        const response = await axios.get('https://api.meteosource.com/v1/find_places', {\n          params: {\n            place_id: 'your_location',\n            language: 'en',\n            unit: 'metric',\n            key: 'your_api_key' // replace with your actual API key\n          }\n        });\n        setWeatherData(response.data);\n      } catch (error) {\n        console.error('Error fetching weather data', error);\n      }\n    };\n    fetchWeatherData();\n  }, []);\n  if (!weatherData) return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: \"Loading...\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 30,\n    columnNumber: 28\n  }, this);\n  const data = {\n    labels: weatherData.hourly.map(hour => hour.date),\n    datasets: [{\n      label: 'Temperature',\n      data: weatherData.hourly.map(hour => hour.temperature),\n      fill: false,\n      backgroundColor: 'rgba(75,192,192,1)',\n      borderColor: 'rgba(75,192,192,1)'\n    }]\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"Weather Data\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Line, {\n      data: data\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 46,\n    columnNumber: 5\n  }, this);\n};\n_s(WeatherChart, \"BCUo9muHyxrqajg6diFxqqqjG/A=\");\n_c = WeatherChart;\nexport default WeatherChart;\nvar _c;\n$RefreshReg$(_c, \"WeatherChart\");","map":{"version":3,"names":["React","useState","useEffect","axios","Line","jsxDEV","_jsxDEV","WeatherChart","_s","weatherData","setWeatherData","fetchWeatherData","response","get","params","place_id","language","unit","key","data","error","console","children","fileName","_jsxFileName","lineNumber","columnNumber","labels","hourly","map","hour","date","datasets","label","temperature","fill","backgroundColor","borderColor","_c","$RefreshReg$"],"sources":["D:/0. Acadmic stuff/CSE '21/PERSONAL/CSB_Hackathon/weather-app-chart/src/components/WeatherChart.js"],"sourcesContent":["// src/components/WeatherChart.js\r\n\r\nimport React, { useState, useEffect } from 'react';\r\nimport axios from 'axios';\r\nimport { Line } from 'react-chartjs-2';\r\n\r\nconst WeatherChart = () => {\r\n  const [weatherData, setWeatherData] = useState(null);\r\n\r\n  useEffect(() => {\r\n    const fetchWeatherData = async () => {\r\n      try {\r\n        const response = await axios.get('https://api.meteosource.com/v1/find_places', {\r\n          params: {\r\n            place_id: 'your_location',\r\n            language: 'en',\r\n            unit: 'metric',\r\n            key: 'your_api_key'  // replace with your actual API key\r\n          }\r\n        });\r\n        setWeatherData(response.data);\r\n      } catch (error) {\r\n        console.error('Error fetching weather data', error);\r\n      }\r\n    };\r\n\r\n    fetchWeatherData();\r\n  }, []);\r\n\r\n  if (!weatherData) return <div>Loading...</div>;\r\n\r\n  const data = {\r\n    labels: weatherData.hourly.map(hour => hour.date),\r\n    datasets: [\r\n      {\r\n        label: 'Temperature',\r\n        data: weatherData.hourly.map(hour => hour.temperature),\r\n        fill: false,\r\n        backgroundColor: 'rgba(75,192,192,1)',\r\n        borderColor: 'rgba(75,192,192,1)',\r\n      },\r\n    ],\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      <h2>Weather Data</h2>\r\n      <Line data={data} />\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default WeatherChart;\r\n"],"mappings":";;AAAA;;AAEA,OAAOA,KAAK,IAAIC,QAAQ,EAAEC,SAAS,QAAQ,OAAO;AAClD,OAAOC,KAAK,MAAM,OAAO;AACzB,SAASC,IAAI,QAAQ,iBAAiB;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAEvC,MAAMC,YAAY,GAAGA,CAAA,KAAM;EAAAC,EAAA;EACzB,MAAM,CAACC,WAAW,EAAEC,cAAc,CAAC,GAAGT,QAAQ,CAAC,IAAI,CAAC;EAEpDC,SAAS,CAAC,MAAM;IACd,MAAMS,gBAAgB,GAAG,MAAAA,CAAA,KAAY;MACnC,IAAI;QACF,MAAMC,QAAQ,GAAG,MAAMT,KAAK,CAACU,GAAG,CAAC,4CAA4C,EAAE;UAC7EC,MAAM,EAAE;YACNC,QAAQ,EAAE,eAAe;YACzBC,QAAQ,EAAE,IAAI;YACdC,IAAI,EAAE,QAAQ;YACdC,GAAG,EAAE,cAAc,CAAE;UACvB;QACF,CAAC,CAAC;QACFR,cAAc,CAACE,QAAQ,CAACO,IAAI,CAAC;MAC/B,CAAC,CAAC,OAAOC,KAAK,EAAE;QACdC,OAAO,CAACD,KAAK,CAAC,6BAA6B,EAAEA,KAAK,CAAC;MACrD;IACF,CAAC;IAEDT,gBAAgB,CAAC,CAAC;EACpB,CAAC,EAAE,EAAE,CAAC;EAEN,IAAI,CAACF,WAAW,EAAE,oBAAOH,OAAA;IAAAgB,QAAA,EAAK;EAAU;IAAAC,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAAK,CAAC;EAE9C,MAAMP,IAAI,GAAG;IACXQ,MAAM,EAAElB,WAAW,CAACmB,MAAM,CAACC,GAAG,CAACC,IAAI,IAAIA,IAAI,CAACC,IAAI,CAAC;IACjDC,QAAQ,EAAE,CACR;MACEC,KAAK,EAAE,aAAa;MACpBd,IAAI,EAAEV,WAAW,CAACmB,MAAM,CAACC,GAAG,CAACC,IAAI,IAAIA,IAAI,CAACI,WAAW,CAAC;MACtDC,IAAI,EAAE,KAAK;MACXC,eAAe,EAAE,oBAAoB;MACrCC,WAAW,EAAE;IACf,CAAC;EAEL,CAAC;EAED,oBACE/B,OAAA;IAAAgB,QAAA,gBACEhB,OAAA;MAAAgB,QAAA,EAAI;IAAY;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI,CAAC,eACrBpB,OAAA,CAACF,IAAI;MAACe,IAAI,EAAEA;IAAK;MAAAI,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAE,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACjB,CAAC;AAEV,CAAC;AAAClB,EAAA,CA5CID,YAAY;AAAA+B,EAAA,GAAZ/B,YAAY;AA8ClB,eAAeA,YAAY;AAAC,IAAA+B,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}