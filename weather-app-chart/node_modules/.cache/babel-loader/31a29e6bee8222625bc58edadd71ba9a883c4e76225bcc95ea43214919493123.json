{"ast":null,"code":"var _jsxFileName = \"E:\\\\coding\\\\projects\\\\hackCSB\\\\weather-app-chart\\\\src\\\\components\\\\BasicMap.js\",\n  _s = $RefreshSig$();\nimport React from 'react';\nimport { SkeletonText } from '@chakra-ui/react';\nimport { useJsApiLoader, GoogleMap, useLoadScript } from '@react-google-maps/api';\nimport { Fragment as _Fragment, jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst containerStyle = {\n  width: '400px',\n  height: '400px'\n};\nconst center = {\n  lat: -3.745,\n  lng: -38.523\n};\nconst BasicMap = () => {\n  _s();\n  const {\n    isLoaded,\n    isError\n  } = useLoadScript({\n    id: 'google-map-script',\n    googleMapsApiKey: 'AIzaSyAZHN_PoVmOm2GckA75upkw06FFG_8kVAA'\n  });\n  const [map, setMap] = React.useState(null);\n  const onLoad = React.useCallback(function callback(map) {\n    // This is just an example of getting and using the map instance!!! don't just blindly copy!\n    const bounds = new window.google.maps.LatLngBounds(center);\n    map.fitBounds(bounds);\n    setMap(map);\n  }, []);\n  const onUnmount = React.useCallback(function callback(map) {\n    setMap(null);\n  }, []);\n  return isLoaded ? /*#__PURE__*/_jsxDEV(GoogleMap, {\n    mapContainerStyle: containerStyle,\n    center: center,\n    zoom: 10,\n    onLoad: onLoad,\n    onUnmount: onUnmount,\n    children: /*#__PURE__*/_jsxDEV(_Fragment, {}, void 0, false)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 37,\n    columnNumber: 7\n  }, this) : /*#__PURE__*/_jsxDEV(_Fragment, {}, void 0, false);\n};\n_s(BasicMap, \"53C1wW5Mte4+ENdvVNmErud1d5A=\", false, function () {\n  return [useLoadScript];\n});\n_c = BasicMap;\nexport default BasicMap;\nvar _c;\n$RefreshReg$(_c, \"BasicMap\");","map":{"version":3,"names":["React","SkeletonText","useJsApiLoader","GoogleMap","useLoadScript","Fragment","_Fragment","jsxDEV","_jsxDEV","containerStyle","width","height","center","lat","lng","BasicMap","_s","isLoaded","isError","id","googleMapsApiKey","map","setMap","useState","onLoad","useCallback","callback","bounds","window","google","maps","LatLngBounds","fitBounds","onUnmount","mapContainerStyle","zoom","children","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["E:/coding/projects/hackCSB/weather-app-chart/src/components/BasicMap.js"],"sourcesContent":["import React from 'react'\r\nimport {SkeletonText} from '@chakra-ui/react'\r\nimport {useJsApiLoader , GoogleMap, useLoadScript} from '@react-google-maps/api'\r\n\r\nconst containerStyle = {\r\n    width: '400px',\r\n    height: '400px'\r\n  };\r\n  \r\n  const center = {\r\n    lat: -3.745,\r\n    lng: -38.523\r\n  };\r\n\r\nconst BasicMap = () => {\r\n\r\n    const { isLoaded, isError } = useLoadScript({\r\n        id: 'google-map-script',\r\n        googleMapsApiKey: 'AIzaSyAZHN_PoVmOm2GckA75upkw06FFG_8kVAA'\r\n    })\r\n\r\n    const [map, setMap] = React.useState(null)\r\n\r\n  const onLoad = React.useCallback(function callback(map) {\r\n    // This is just an example of getting and using the map instance!!! don't just blindly copy!\r\n    const bounds = new window.google.maps.LatLngBounds(center);\r\n    map.fitBounds(bounds);\r\n\r\n    setMap(map)\r\n  }, [])\r\n\r\n  const onUnmount = React.useCallback(function callback(map) {\r\n    setMap(null)\r\n  }, [])\r\n\r\n  return isLoaded ? (\r\n      <GoogleMap\r\n        mapContainerStyle={containerStyle}\r\n        center={center}\r\n        zoom={10}\r\n        onLoad={onLoad}\r\n        onUnmount={onUnmount}\r\n      >\r\n        { /* Child components, such as markers, info windows, etc. */ }\r\n        <></>\r\n      </GoogleMap>\r\n  ) : <></>\r\n}\r\n\r\nexport default BasicMap\r\n"],"mappings":";;AAAA,OAAOA,KAAK,MAAM,OAAO;AACzB,SAAQC,YAAY,QAAO,kBAAkB;AAC7C,SAAQC,cAAc,EAAGC,SAAS,EAAEC,aAAa,QAAO,wBAAwB;AAAA,SAAAC,QAAA,IAAAC,SAAA,EAAAC,MAAA,IAAAC,OAAA;AAEhF,MAAMC,cAAc,GAAG;EACnBC,KAAK,EAAE,OAAO;EACdC,MAAM,EAAE;AACV,CAAC;AAED,MAAMC,MAAM,GAAG;EACbC,GAAG,EAAE,CAAC,KAAK;EACXC,GAAG,EAAE,CAAC;AACR,CAAC;AAEH,MAAMC,QAAQ,GAAGA,CAAA,KAAM;EAAAC,EAAA;EAEnB,MAAM;IAAEC,QAAQ;IAAEC;EAAQ,CAAC,GAAGd,aAAa,CAAC;IACxCe,EAAE,EAAE,mBAAmB;IACvBC,gBAAgB,EAAE;EACtB,CAAC,CAAC;EAEF,MAAM,CAACC,GAAG,EAAEC,MAAM,CAAC,GAAGtB,KAAK,CAACuB,QAAQ,CAAC,IAAI,CAAC;EAE5C,MAAMC,MAAM,GAAGxB,KAAK,CAACyB,WAAW,CAAC,SAASC,QAAQA,CAACL,GAAG,EAAE;IACtD;IACA,MAAMM,MAAM,GAAG,IAAIC,MAAM,CAACC,MAAM,CAACC,IAAI,CAACC,YAAY,CAACnB,MAAM,CAAC;IAC1DS,GAAG,CAACW,SAAS,CAACL,MAAM,CAAC;IAErBL,MAAM,CAACD,GAAG,CAAC;EACb,CAAC,EAAE,EAAE,CAAC;EAEN,MAAMY,SAAS,GAAGjC,KAAK,CAACyB,WAAW,CAAC,SAASC,QAAQA,CAACL,GAAG,EAAE;IACzDC,MAAM,CAAC,IAAI,CAAC;EACd,CAAC,EAAE,EAAE,CAAC;EAEN,OAAOL,QAAQ,gBACXT,OAAA,CAACL,SAAS;IACR+B,iBAAiB,EAAEzB,cAAe;IAClCG,MAAM,EAAEA,MAAO;IACfuB,IAAI,EAAE,EAAG;IACTX,MAAM,EAAEA,MAAO;IACfS,SAAS,EAAEA,SAAU;IAAAG,QAAA,eAGrB5B,OAAA,CAAAF,SAAA,mBAAI;EAAC;IAAA+B,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACI,CAAC,gBACZhC,OAAA,CAAAF,SAAA,mBAAI,CAAC;AACX,CAAC;AAAAU,EAAA,CAjCKD,QAAQ;EAAA,QAEoBX,aAAa;AAAA;AAAAqC,EAAA,GAFzC1B,QAAQ;AAmCd,eAAeA,QAAQ;AAAA,IAAA0B,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}