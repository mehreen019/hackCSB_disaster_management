{"ast":null,"code":"var _jsxFileName = \"E:\\\\coding\\\\projects\\\\hackCSB\\\\weather-app-chart\\\\src\\\\components\\\\WeatherChart.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport axios from 'axios';\nimport TemperatureChart from './TemperatureChart';\nimport WindSpeedChart from './WindSpeedChart';\nimport CloudCoverChart from './CloudCoverChart';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst WeatherChart = ({\n  placeId\n}) => {\n  _s();\n  const [weatherData, setWeatherData] = useState(null);\n  useEffect(() => {\n    const fetchWeatherData = async () => {\n      try {\n        const response = await axios.get('http://localhost:5000/api/point', {\n          params: {\n            place_id: placeId,\n            sections: 'all',\n            timezone: 'auto',\n            language: 'en',\n            units: 'metric'\n          }\n        });\n        setWeatherData(response.data);\n        console.log(\"weather data in chart\");\n        console.log(response.data);\n      } catch (error) {\n        console.error('Error fetching weather data', error);\n      }\n    };\n    if (placeId) {\n      fetchWeatherData();\n    }\n  }, [placeId]);\n  if (!weatherData) return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: \"Loading...\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 36,\n    columnNumber: 30\n  }, this);\n  const hourlyData = weatherData.hourly.data;\n  const chartStyle = {\n    width: '600px',\n    height: '400px',\n    marginBottom: '20px'\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      style: chartStyle,\n      children: /*#__PURE__*/_jsxDEV(TemperatureChart, {\n        data: hourlyData\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 49,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      style: chartStyle,\n      children: /*#__PURE__*/_jsxDEV(WindSpeedChart, {\n        data: hourlyData\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 52,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      style: chartStyle,\n      children: /*#__PURE__*/_jsxDEV(CloudCoverChart, {\n        data: hourlyData\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 55,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 54,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 47,\n    columnNumber: 9\n  }, this);\n};\n_s(WeatherChart, \"BCUo9muHyxrqajg6diFxqqqjG/A=\");\n_c = WeatherChart;\nexport default WeatherChart;\nvar _c;\n$RefreshReg$(_c, \"WeatherChart\");","map":{"version":3,"names":["React","useState","useEffect","axios","TemperatureChart","WindSpeedChart","CloudCoverChart","jsxDEV","_jsxDEV","WeatherChart","placeId","_s","weatherData","setWeatherData","fetchWeatherData","response","get","params","place_id","sections","timezone","language","units","data","console","log","error","children","fileName","_jsxFileName","lineNumber","columnNumber","hourlyData","hourly","chartStyle","width","height","marginBottom","style","_c","$RefreshReg$"],"sources":["E:/coding/projects/hackCSB/weather-app-chart/src/components/WeatherChart.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\r\nimport axios from 'axios';\r\nimport TemperatureChart from './TemperatureChart';\r\nimport WindSpeedChart from './WindSpeedChart';\r\nimport CloudCoverChart from './CloudCoverChart';\r\n\r\nconst WeatherChart = ({ placeId }) => {\r\n    const [weatherData, setWeatherData] = useState(null);\r\n\r\n    useEffect(() => {\r\n        const fetchWeatherData = async () => {\r\n            try {\r\n                const response = await axios.get('http://localhost:5000/api/point', {\r\n                    params: {\r\n                        place_id: placeId,\r\n                        sections: 'all',\r\n                        timezone: 'auto',\r\n                        language: 'en',\r\n                        units: 'metric',\r\n                    },\r\n                });\r\n\r\n                setWeatherData(response.data);\r\n                console.log(\"weather data in chart\");\r\n                console.log(response.data);\r\n            } catch (error) {\r\n                console.error('Error fetching weather data', error);\r\n            }\r\n        };\r\n\r\n        if (placeId) {\r\n            fetchWeatherData();\r\n        }\r\n    }, [placeId]);\r\n\r\n    if (!weatherData) return <div>Loading...</div>;\r\n\r\n    const hourlyData = weatherData.hourly.data;\r\n\r\n    const chartStyle = {\r\n        width: '600px',\r\n        height: '400px',\r\n        marginBottom: '20px'\r\n    };\r\n\r\n    return (\r\n        <div>\r\n            <div style={chartStyle}>\r\n                <TemperatureChart data={hourlyData} />\r\n            </div>\r\n            <div style={chartStyle}>\r\n                <WindSpeedChart data={hourlyData} />\r\n            </div>\r\n            <div style={chartStyle}>\r\n                <CloudCoverChart data={hourlyData} />\r\n            </div>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default WeatherChart;\r\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,EAAEC,SAAS,QAAQ,OAAO;AAClD,OAAOC,KAAK,MAAM,OAAO;AACzB,OAAOC,gBAAgB,MAAM,oBAAoB;AACjD,OAAOC,cAAc,MAAM,kBAAkB;AAC7C,OAAOC,eAAe,MAAM,mBAAmB;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAEhD,MAAMC,YAAY,GAAGA,CAAC;EAAEC;AAAQ,CAAC,KAAK;EAAAC,EAAA;EAClC,MAAM,CAACC,WAAW,EAAEC,cAAc,CAAC,GAAGZ,QAAQ,CAAC,IAAI,CAAC;EAEpDC,SAAS,CAAC,MAAM;IACZ,MAAMY,gBAAgB,GAAG,MAAAA,CAAA,KAAY;MACjC,IAAI;QACA,MAAMC,QAAQ,GAAG,MAAMZ,KAAK,CAACa,GAAG,CAAC,iCAAiC,EAAE;UAChEC,MAAM,EAAE;YACJC,QAAQ,EAAER,OAAO;YACjBS,QAAQ,EAAE,KAAK;YACfC,QAAQ,EAAE,MAAM;YAChBC,QAAQ,EAAE,IAAI;YACdC,KAAK,EAAE;UACX;QACJ,CAAC,CAAC;QAEFT,cAAc,CAACE,QAAQ,CAACQ,IAAI,CAAC;QAC7BC,OAAO,CAACC,GAAG,CAAC,uBAAuB,CAAC;QACpCD,OAAO,CAACC,GAAG,CAACV,QAAQ,CAACQ,IAAI,CAAC;MAC9B,CAAC,CAAC,OAAOG,KAAK,EAAE;QACZF,OAAO,CAACE,KAAK,CAAC,6BAA6B,EAAEA,KAAK,CAAC;MACvD;IACJ,CAAC;IAED,IAAIhB,OAAO,EAAE;MACTI,gBAAgB,CAAC,CAAC;IACtB;EACJ,CAAC,EAAE,CAACJ,OAAO,CAAC,CAAC;EAEb,IAAI,CAACE,WAAW,EAAE,oBAAOJ,OAAA;IAAAmB,QAAA,EAAK;EAAU;IAAAC,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAAK,CAAC;EAE9C,MAAMC,UAAU,GAAGpB,WAAW,CAACqB,MAAM,CAACV,IAAI;EAE1C,MAAMW,UAAU,GAAG;IACfC,KAAK,EAAE,OAAO;IACdC,MAAM,EAAE,OAAO;IACfC,YAAY,EAAE;EAClB,CAAC;EAED,oBACI7B,OAAA;IAAAmB,QAAA,gBACInB,OAAA;MAAK8B,KAAK,EAAEJ,UAAW;MAAAP,QAAA,eACnBnB,OAAA,CAACJ,gBAAgB;QAACmB,IAAI,EAAES;MAAW;QAAAJ,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAE;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACrC,CAAC,eACNvB,OAAA;MAAK8B,KAAK,EAAEJ,UAAW;MAAAP,QAAA,eACnBnB,OAAA,CAACH,cAAc;QAACkB,IAAI,EAAES;MAAW;QAAAJ,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAE;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACnC,CAAC,eACNvB,OAAA;MAAK8B,KAAK,EAAEJ,UAAW;MAAAP,QAAA,eACnBnB,OAAA,CAACF,eAAe;QAACiB,IAAI,EAAES;MAAW;QAAAJ,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAE;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACpC,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACL,CAAC;AAEd,CAAC;AAACpB,EAAA,CApDIF,YAAY;AAAA8B,EAAA,GAAZ9B,YAAY;AAsDlB,eAAeA,YAAY;AAAC,IAAA8B,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}